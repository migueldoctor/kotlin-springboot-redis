server.port=9000

#H2 database connection parameters
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.name=test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.initialization-mode=always

#H2 Jpa database start up configuration
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=create
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.open-in-view=true

# Enabling H2 Console
# You can access it via localhost:9000/h2 if server.port=9000 and you need to use the value of
# spring.datasource.url=jdbc:h2:mem:testdb as indicated in the logs for the field JDBC URL in the log in page
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# kotlin logging -> Define the level of the log
logging.level.com.kesizo.sample.kotlin.redis.rest.kotlinspringbootredis = DEBUG

# swagger-ui custom path (in the example it would be available on http://localhost:9000/swagger-ui/index.html
springdoc.swagger-ui.path=/swagger-ui.html

#Redis (you need to start it separately using docker: $ docker run --name my-redis -p 6379:6379 -d redis)
# Entities stored on Redis must implement Serializable
spring.redis.host = 127.0.0.1
spring.redis.port = 6379
spring.cache.redis.time-to-live=1m
